//jshint esversion:6

require("dotenv").config();
const express = require("express");
const bodyParser = require("body-parser");
const ejs = require("ejs");
const mongoose = require("mongoose");
// const encrypt = require("mongoose-encryption"); ///// Used to encrypt the database
// const md5 = require("md5"); //// Used for hashing of password
// const bcrypt = require("bcrypt"); //// Used for hashing with salt of password
// const saltRound = 10;

const app = express();

app.set("view engine", "ejs");

app.use(bodyParser.urlencoded({ extended: true }));
app.use(express.static("public"));


//?????????????????????????????????????????????????????????//
//????????????????????? Database Connection ?????????????????????//
//?????????????????????????????????????????????????????????//
mongoose.connect("mongodb://localhost:27017/userDB");
// mongoose.set("useCreateIndex", true);

const userSchema = new mongoose.Schema({
  email: String,
  password: String,
});



const UsersCollection = new mongoose.model("User", userSchema);

//?????????????????????????????????????????????????????????//
//????????????????????? Password encryption ?????????????????????//
//?????????????????????????????????????????????????????????//

// const secret = "Thisisourlittlesecret.";
// const secret = process.env.SECRET; //Environment variable to keep secret safe
// console.log(process.env.SECRET);
// userSchema.plugin(encrypt, { secret: secret, encryptedFields: ['password'] });

//?????????????????????????????????????????????????????????//
//????????????????????? Get Requestes ?????????????????????//
//?????????????????????????????????????????????????????????//
app.get("/", function (req, res) {
  res.render("home");
});

app.get("/login", function (req, res) {
  res.render("login");
});

app.get("/register", function (req, res) {
  res.render("register");
});

app.get("/secrets", function (req, res) {
  if (req.isAuthenticated()) {
    res.render("secrets");
  } else {
    res.redirect("/login");
  }
});

//?????????????????????????????????????????????????????????//
//????????????????????? Post Requestes ?????????????????????//
//?????????????????????????????????????????????????????????//
app.post("/register", function (req, res) {
  // const newUser = new UsersCollection({
  //     email: req.body.username,
  //     password: md5(req.body.password) //Here md5() is a hash function which is used for hashing of password
  // });

  //Level-4 Security
  //   bcrypt.hash(req.body.password, saltRound, function (err, bcryptedPassword) {
  //     if (!err) {
  //         const newUser = new UsersCollection({
  //           email: req.body.username,
  //           password: bcryptedPassword
  //         });

  //         newUser.save(function (err) {
  //           if (err) {
  //             res.send("Error...");
  //           } else {
  //             res.render("secrets");
  //           }
  //         });
  //     }

});

app.post("/login", function (req, res) {
  //   const userEmail = req.body.username;
  //   const userPassword = req.body.password;
  //   //   const userPassword = md5(req.body.password); //Password with normal hashing
  //   UsersCollection.findOne({ email: userEmail }, function (err, foundUser) {
  //     if (err) {
  //       res.send(err);
  //     } else {
  //       if (foundUser) {
  //         //Level - 4 Security
  //         bcrypt.compare(userPassword, foundUser.password, function(err, comparedRes) {
  //             if (comparedRes === true) {
  //                 res.render("secrets");
  //               } else {
  //                 res.send("Password incorrect...");
  //               }
  //         });
  //       } else {
  //         res.send("No user found!!");
  //       }
  //     }
  //   });

});

app.listen(3000, function () {
  console.log("Server is successfully started on port 3000");
});
